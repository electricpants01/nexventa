---
import Banner from '@interfaces/Banner.ts'

let banners: Banner[] = []
let errorLoadingData = false
let error: string | null = null

try {
  const response = await fetch('http://localhost:4321/api/banner.json')
  if (response.ok) {
    const data: Banner[] | null = await response.json()
    if (data) {
      banners = data
    } else {
      throw new Error('La respuesta está vacía')
    }
  } else if (response.status === 400) {
    throw new Error('Error: Solicitud incorrecta (400)')
  } else if (response.status === 404) {
    throw new Error('Error: Recurso no encontrado (404)')
  } else if (response.status === 500) {
    throw new Error('Error: Error interno del servidor (500)')
  } else {
    throw new Error(
      'Error al cargar los datos. Estado: ' + response.status + ' ' + response.statusText
    )
  }
} catch (err: any) {
  console.error('Error al obtener los datos de la API:', err.message)
  error = err.message
  errorLoadingData = true
}

export { banners, errorLoadingData, error }
---

<astro-doc>
  <div class="container">
    <div id="default-carousel" class="relative mx-auto" style="width:75%;right: 12%; " data-carousel="slide">
      <!-- Carousel wrapper -->
      <div class="md:h-50 relative h-56 overflow-hidden rounded-lg">
        {
          errorLoadingData ? (
            <p class="text-red-500">Error al cargar los datos: {error}</p>
          ) : (
            banners.map((banner, index) => (
              <div
                class={`hidden duration-700 ease-in-out ${index === 0 ? 'block' : ''}`}
                data-carousel-item
              >
                {banner.img ? (
                  <img
                    src={banner.img}
                    alt={banner.title}
                    class="absolute left-1/2 top-1/2 block h-auto w-full max-w-full -translate-x-1/2 -translate-y-1/2"
                  />
                ) : (
                  <p class="absolute left-1/2 top-1/2 block w-full -translate-x-1/2 -translate-y-1/2">
                    No se encontró imagen para {banner.title}
                  </p>
                )}

                <div class="banner-content absolute bottom-0 start-0 bg-gradient-to-br from-orange-600 to-orange-700 p-4 text-gray-400">
                  <div class="banner-content2 bg-gradient-to-br to-orange-600">
                    <div class="relative rounded-md bg-gray-200 p-4">
                      <div class="absolute right-0 top-0 h-0 w-0 border-b-8 border-r-8 border-gray-200" />
                      <p class="text-lg font-bold text-gray-600">{banner.title}</p>
                    </div>

                    <h2 class="banner-subtitle md:text-1xl lg:text-1xl text-lg font-semibold sm:text-xl">
                      {banner.subtitle}
                    </h2>

                    {banner.img && (
                      <a
                        href="#"
                        class="ml-2 inline-block rounded-md border bg-black px-4 py-2 text-sm font-normal text-white hover:bg-orange-600"
                      >
                        Ordenar
                      </a>
                    )}
                    <p class="text-left text-4xl font-bold">{banner.title}</p>
                  </div>
                </div>
              </div>
            ))
          )
        }
      </div>
      <!-- Slider indicators -->
      <div
        class="absolute bottom-5 left-1/2 z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse"
      >
        {
          banners.map((_, index) => (
            <button
              type="button"
              class={`h-3 w-3 rounded-full ${index === 0 ? 'bg-white' : 'bg-gray-400'}`}
              aria-current={index === 0 ? 'true' : 'false'}
              aria-label={`Slide ${index + 1}`}
              data-carousel-slide-to={index}
            />
          ))
        }
      </div>
      <!-- Slider controls -->
      <button
        type="button"
        class="group absolute start-0 top-0 z-30 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none"
        data-carousel-prev
      >
        <span
          class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70"
        >
          <svg
            class="h-4 w-4 text-white rtl:rotate-180 dark:text-gray-800"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 6 10"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M5 1 1 5l4 4"></path>
          </svg>
          <span class="sr-only">Previous</span>
        </span>
      </button>
      <button
        type="button"
        class="group absolute end-0 top-0 z-30 flex h-full cursor-pointer items-center justify-center px-4 focus:outline-none"
        data-carousel-next
      >
        <span
          class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/30 group-hover:bg-white/50 group-focus:outline-none group-focus:ring-4 group-focus:ring-white dark:bg-gray-800/30 dark:group-hover:bg-gray-800/60 dark:group-focus:ring-gray-800/70"
        >
          <svg
            class="h-4 w-4 text-white rtl:rotate-180 dark:text-gray-800"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 6 10"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 9 4-4-4-4"></path>
          </svg>
          <span class="sr-only">Next</span>
        </span>
      </button>
    </div>
  </div>
</astro-doc>
